{"version":3,"sources":["Header.js","NavigationMenu.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Component","NavigationMenu","Contact","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","firstName","surname","email","contactNumber","password","reEnterPassword","className","type","name","value","checked","rows","cols","Footer","currentYear","Date","getFullYear","App","src_Header","src_NavigationMenu","src_Contact","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ac9d244.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <p>Header</p>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass NavigationMenu extends Component {\n  render() {\n    return (\n      <div>\n        <p>NavigationMenu</p>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default NavigationMenu;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      surname: '',\n      email: '',\n      contactNumber: '',\n      password: '',\n      reEnterPassword: ''\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1>Contact</h1>\n        <form className=\"contactForm\">\n          <label>\n            First Name:\n          <input type=\"text\" name=\"firstName\" />\n          </label>\n          <br />\n\n          <label>\n            Surname:\n          <input type=\"text\" name=\"surname\" />\n          </label>\n          <br />\n          \n          <label>\n            Email:\n          <input type=\"email\" name=\"email\" />\n          </label>\n          <br />\n          \n          <label>\n            Contact Number:\n          <input type=\"number\" name=\"contactNumber\" />\n          </label>\n          <br />\n          \n          <label>\n            Password:\n          <input type=\"password\" name=\"password\" />\n          </label>\n          <br />\n          \n          <label>\n            Re-enter Password:\n          <input type=\"password\" name=\"reEnterPassword\" />\n          </label>\n          <br />\n\n          <label>\n            Preferred Contact Method:<br />\n            <input type=\"radio\" name=\"preferredContact\" value=\"either\" checked />Either\n            <input type=\"radio\" name=\"preferredContact\" value=\"email\" />Email\n            <input type=\"radio\" name=\"preferredContact\" value=\"mobile\" />Phone\n          </label>\n          <br />\n\n          <label>\n            How Did You Hear About Us?:\n            <br />\n            <select name=\"howHeardAboutUs\">\n              <option value=\"socialMedia\">Social Media</option>\n              <option value=\"online\">Online</option>\n              <option value=\"friendsOrFamily\">Friends/family</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </label>\n          <br />\n\n          <label>\n            Comments:<br />\n            <textarea name=\"comments\" rows=\"10\" cols=\"30\">\n            </textarea>\n          </label>\n          <br />\n\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Contact;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\n  render() {\n    var currentYear = new Date().getFullYear();\n\n    return (\n      <div>\n        <hr />\n        <p>Toast Recipes &copy; Andrew Soden {currentYear}</p>\n        <p>A simple mess around website just for writing automation tests against :)</p>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header';\nimport NavigationMenu from './NavigationMenu.js';\nimport Contact from './Contact.js';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <NavigationMenu />\n        <Contact />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}